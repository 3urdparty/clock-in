/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by laravel-typescriptable
declare namespace App.Models {
  export interface FingerprintAction {
    id?: number
    created_at?: string
    updated_at?: string
    fingerprint_id: number
    device_id?: string
    employee_id?: string
    action: string
  }
  export interface User {
    id?: number
    name: string
    email: string
    email_verified_at?: string
    phone_number?: string
    created_at?: string
    updated_at?: string
    employee?: App.Models.Employee
    password?: any
  }
  export interface Shift {
    id?: number
    created_at?: string
    updated_at?: string
    date: string
    start?: number
    end?: number
    employee_id: number
    device_id: number
    duration?: number
    week_number?: number
    week_day?: number
    device?: App.Models.Device
    employee?: App.Models.Employee
  }
  export interface Fingerprint {
    id?: number
    created_at?: string
    updated_at?: string
    employee_id: number
    device_id: number
    employee?: App.Models.Employee
    device?: App.Models.Device
  }
  export interface Employee {
    id?: number
    created_at?: string
    updated_at?: string
    username: string
    image_url: string
    role: string
    description: string
    user_id: number
    status?: any
    user?: App.Models.User
    fingerprints?: App.Models.Fingerprint[]
    shifts?: App.Models.Shift[]
    recent_shift?: App.Models.Shift
    fingerprints_count?: number
    shifts_count?: number
  }
  export interface Device {
    id?: number
    created_at?: string
    updated_at?: string
    name: string
    type: string
    description: string
    status: string
    proximity: string
    image_url: string
    connection: string
    connection_strength: number
    battery: string
    shifts?: App.Models.Shift[]
    shifts_count?: number
  }
}

declare namespace App {
  export interface PaginateLink {
    url: string
    label: string
    active: boolean
  }
  export interface Paginate<T = any> {
    data: T[]
    current_page: number
    first_page_url: string
    from: number
    last_page: number
    last_page_url: string
    links: App.PaginateLink[]
    next_page_url: string
    path: string
    per_page: number
    prev_page_url: string
    to: number
    total: number
  }
  export interface ApiPaginate<T = any> {
    data: T[]
    links: {
      first?: string
      last?: string
      prev?: string
      next?: string
    }
    meta: {
      current_page: number
      from: number
      last_page: number
      links: App.PaginateLink[]
      path: string
      per_page: number
      to: number
      total: number
    }
  }
}
